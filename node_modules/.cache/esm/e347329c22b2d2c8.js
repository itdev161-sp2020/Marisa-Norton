let express,connectDatabase,check,validationResult;_22b‍.w("express",[["default",["express"],function(v){express=v}]]);_22b‍.w("./config/db",[["default",["connectDatabase"],function(v){connectDatabase=v}]]);_22b‍.w("express-validator",[["check",["check"],function(v){check=v}],["validationResult",["validationResult"],function(v){validationResult=v}]]);


//{^named exports indstead of default exports}


//Initialize express application
const app = express();


//connect database
connectDatabase();

//configure middleware
app.use(express.json({ extended: false }));

//API endpoints
/**
 * @route GET /
 * @desc Test endpoint
**/
app.get('/', (req, res) =>
 res.send('http get request sent to root api endpoint')
);

/*
 * @route POST api/users
 * @desc Register User
 */
app.post(
     '/api/users',
[
    check('name', "Please enter your name")
        .not()
        .isEmpty(),
        check('email', 'Please enter a valid email').isEmail(),
        check(
            'password', 
            'Please enter a password with 6 or more characters'
        ).isLength({ min: 6})
    ],
    (req, res) => {
        const errors = validationResult(req);
        if (!errors.isEmpty()) {
        return res.status(422).json({ errors: errors.array() });
        } else {
        return res.send(req.body);
        }
    }
);

//Connection listener
app.listen(3000, () => console.log('Express server running on port 3000'));